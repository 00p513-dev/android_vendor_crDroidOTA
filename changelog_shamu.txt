====================
     10-15-2017
====================


   * android/
62c3290 Merge branch 'cm-14.1' of https://github.com/LineageOS/android into 7.1

   * build/
e10bb4909 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_build into 7.1
8629c2b7f Merge branch 'cm-14.1' of https://github.com/LineageOS/android_build into 7.1

   * device/moto/shamu/
8bf49180 shamu: Re-add f2fs support
07b337a7 shamu: Remove unnecessary hints
35f86b90 shamu: Set props for dex2oat
cd08d7a1 shamu: Remove additional offload props
c40d75cb Revert "shamu: Give additional cores to background cpuset"
b8c1f5c3 shamu: Update tunables
a46e055b shamu: Enable zram support
cae89df3 shamu: Remove f2fs and lazytime opt
e23caa57 shamu: Update audio policy
67befd91 shamu: Enable burn in protection
781e60aa shamu: update build fingerprint & description to N6F27M
8be9f582 Merge branch 'nougat-mr1.7-release' of https://android.googlesource.com/device/moto/shamu into cm-14.1

   * external/DUtils/
2f3935d Update Default Hw Button Actions

   * frameworks/base/
0d9ed7588fa Use System.currentTimeMillis() again to calc TTFF
b3256a388b5 SystemUI: Fix burnIn protection setting for DUI
e6dc2efb5e6 base: Restore QSDetailItemsList
4bcf86db615 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_frameworks_base into 7.1

   * kernel/moto/shamu/
918148646a8 shamu: sigma kernel 9.2 FINAL (nougat)
5031aa58a05 shamu: Update defconfig for f2fs
fd53d814a95 shamu: Catch up Jaegeuk's stable branch to v4.10-rc1-3.10
1f33585a183 ipv4/fib: don't warn when primary address is missing if in_dev is dead
772cab3a942 mm/mmap.c: do not blow on PROT_NONE MAP_FIXED holes in the stack
6397a951283 mm: fix overflow check in expand_upwards()
c45a1be5ac7 binder: Revert changes for oreo

   * libcore/
5adc6395f Merge branch 'cm-14.1' of https://github.com/LineageOS/android_libcore into HEAD

   * packages/apps/CMParts/
28d0bc0 CMParts: Add strings for DCI-P3 color profile

   * packages/apps/Contacts/
3cffd4b38 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_Contacts into 7.1

   * packages/apps/ContactsCommon/
32473eb6 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_ContactsCommon into 7.1

   * packages/apps/DUI/
b6869cf DUI: add burnIn protection setting [4/4]

   * packages/apps/Dialer/
0ad70990b Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_Dialer into 7.1

   * packages/apps/ExactCalculator/
bdf69b5 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_ExactCalculator into 7.1

   * packages/apps/FMRadio/
e5aa5f8 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_FMRadio into 7.1

   * packages/apps/Messaging/
d1a6762 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_Messaging into 7.1

   * packages/apps/PackageInstaller/
167e8ad2 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_PackageInstaller into 7.1

   * packages/apps/PhoneCommon/
badd6a1 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_PhoneCommon into 7.1

   * packages/apps/Settings/
08f6958a99 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_Settings into 7.1

   * packages/apps/Trebuchet/
66b6d8e68 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_apps_Trebuchet into 7.1

   * packages/apps/crDroidSettings/
eaa99a3 crdroid: statusbar: Land on correct tuner screen
63ac0dd crdroid: Jeremy has only 1 marlin

   * packages/inputmethods/LatinIME/
5c0c67f35 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_inputmethods_LatinIME into 7.1

   * packages/services/Telecomm/
a513f1e7 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_services_Telecomm into 7.1

   * packages/services/Telephony/
810ea639 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_packages_services_Telephony into 7.1

   * system/sepolicy/
9edd847 Merge branch 'cm-14.1' of https://github.com/LineageOS/android_system_sepolicy into 7.1

   * vendor/cm/
cd789a58 crDroid v3.8
0d7ae43d extract_files: Adjust deodex path and tmpdir
05e18abf extract_utils: implement LOCAL_MODULE_RELATIVE_PATH
41c15b52 cm/aosp/cafremote: Make variables local
9587b47c envsetup: Fix cmremote for AOSP    *s
45dab8bf cm: Add CMSettings package to power_off_alarm_apps

   * vendor/cmsdk/
ba174c4 Merge branch 'cm-14.1' of https://github.com/LineageOS/cm_platform_sdk into 7.1

====================
     10-14-2017
====================


   * kernel/moto/shamu/
fba7daf180e driver core: bus: Fix a potential double free
a2700292227 epoll: fix race between ep_poll_callback(POLLFREE) and ep_free()/ep_remove()
59f548898b1 Revert "epoll: use freezable blocking call"

====================
     10-13-2017
====================


====================
     10-12-2017
====================


   * kernel/moto/shamu/
da2a8f4b1d5 shamu: Disable RBCPR logs
4ce23cbfcec shamu: Update defconfig
0bd922269ac usb: gadget: ci13xxx: Fix define scope
08d213df336 lib: asn1_decoder - add MODULE_LICENSE("GPL")
bf14bbb7349 ASN.1: Handle 'ANY OPTIONAL' in grammar
cdaac58e5bd ASN.1: Fix non-match detection failure on data overrun
c649dbb201f ASN.1: Fix actions on CHOICE elements with IMPLICIT tags
7557d91a9b5 lib/asn1_decoder.c: kernel-doc warning fix
b7a0aabe336 KEYS: Fix handling of stored error in a negatively instantiated user key
f43332f9ba9 KEYS: Don't permit request_key() to construct a new keyring
bff70867e4a KEYS: fix freeing uninitialized memory in key_update()
2ae88fa0e31 KEYS: Call ->free_preparse() even after ->preparse() returns an error
11848a4bdd6 KEYS: fix dereferencing NULL payload with nonzero length
5930c8a680c KEYS: Fix an error code in request_master_key()
41cad0237f7 keys: Guard against null match function in keyring_search_aux()
595629f91bf KEYS: Fix ASN.1 indefinite length object parsing
5609befd1b8 selinux: fix double free in selinux_parse_opts_str()
c792cb58553 selinux: remove unused variabled in the netport, netnode, and netif caches
0da154023f6 selinux: conditionally reschedule in hashtab_insert while loading selinux policy
105c1f7a36f selinux: conditionally reschedule in mls_convert_context while loading selinux policy
a94a56039ea selinux: no recursive read_lock of policy_rwlock in security_genfs_sid()
d2a41edac59 selinux: fix a possible memory leak in cond_read_node()
86023447031 selinux: simple cleanup for cond_read_node()
f221647fd1f selinux: cleanup error reporting in selinux_nlmsg_perm()
0c2587a247c selinux: quiet the filesystem labeling behavior message
9a345aaf662 SELinux: do all flags twiddling in one place
e2609f1b091 UPSTREAM: selinux: fix bug in conditional rules handling
aa57b1c42c7 BACKPORT: selinux: restrict kernel module loading
53a54157fb1 selinux: Remove obsolete selinux_audit_data initialization.
d7eed934c01 selinux: normalize audit log formatting
806197fe7a2 audit: fix a double fetch in audit_log_single_execve_arg()
7b80c540fbd Sanitize 'move_pages()' permission checks
c9d6c80f78b mm/mempolicy: fix use after free when calling get_mempolicy
cdd91581a01 audit: Fix use after free in audit_remove_watch_rule()
4a5ee29468d Use %zu to print resid (size_t).
c6fc7766770 clk: qcom: Increase branch clk status maximum delay
b57b6ac02f6 UPSTREAM: sysfs: add sysfs_create/remove_groups()
3a2d2afe2b7 ARM: make sure RO local relocations are part of kernel RO section
fffbd798cf7 fs/buffer.c: increase the buffer-head per-CPU LRU size
a527970eee0 signal: Only reschedule timers on signals timers have sent
f36dc7d0961 BACKPORT: FROMLIST: pids: make task_tgid_nr_ns() safe
074aefb1188 panic: add cpu/pid to warn_slowpath_common in WARNING printk()s
048cd58893a selinux: Remove unused function avc_sidcmp()
a3b394f0d78 af_unix: fix struct pid memory leak
a7090e6e372 BACKPORT: audit: consistently record PIDs with task_tgid_nr()
511fd139329 selinux: Improve avc logging
cf860237009 ANDROID: hid: uhid: implement refcount for open and close
c45ac490f16 BACKPORT: HID: input: generic hidinput_input_event handler
d6af6231dfb ANDROID: mnt: Fix next_descendent
e5c5dd95e8b UPSTREAM: procfs: fixes pthread cross-thread naming if !PR_DUMPABLE
8d444af7d4c proc: add a reschedule point in proc_readfd_common()
e340fb4490d ANDROID: keychord: Fix for a memory leak in keychord.
95b73b87da6 ANDROID: keychord: Fix races in keychord_write.
8569d284cef ANDROID: keychord: Fix a slab out-of-bounds read.
8f93891e1d9 signal: protect SIGNAL_UNKILLABLE from unintentional clearing.
7623d458203 UPSTREAM: brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()
c82b83414d3 net: wireless: bcmdhd: Ensure watchdog thread isnt called on bus reset
2d8d9333989 net: wireless: bcmdhd: fix for flowring delete pending error
1ea178f9e88 net: wireless: bcmdhd: fix for flowring packet drop issue
9320d2336eb net: wireless: bcmdhd: fix for race condition in flowrings.
4c1b243a884 net: wireless: bcmdhd: Adding check for array out of bound read
d51ab8facb7 net: wireless: bcmdhd: fix kernel panic issue in low memory status

   * packages/services/Telephony/
744a00e6 Telephony: Workaround for MWI on Sprint

====================
     10-11-2017
====================


   * frameworks/base/
ea19b33ad77 Core: Battery warning levels are inclusive, not exclusive

   * kernel/moto/shamu/
7376c2e0b7f arm: fix handling of F_OFD_... in oabi_fcntl64()

   * packages/apps/Recorder/
084c5a0 Recorder: Advertise that we can record voice

   * packages/apps/crDroidSettings/
5dd6f01 Merge pull request #99 from EthanSiva/7.1
b6d8de3 Remove errors

====================
     10-10-2017
====================


   * kernel/lge/hammerhead/
357e63bd input: synaptics: add bounds checks for firmware id

   * kernel/moto/shamu/
c5a7b9bf7fe drivers: net: Disable watchdog
ff725248655 net: rmnet_data: Disable watchdog for rmnet
52fc23ed297 net: sch_generic: Allow devices to opt-out net watchdog
92d91177fcd zram: compact zram when suspended
3fb57b683bd mm: compaction: compact all zones when suspended
091876b635c shamu: Enable state notifier driver
dbd81ae3ec5 state_notifier: Enabled by default
e55a637deca state_notifier: Check delayed work status before cancel
5d760f24ece shamu: state_notifier: Improve routine
8ff52f401da state_notifier: Make workqueues unbound
a31b63231fe shamu: Add state notifier driver
230c413e77d ARM: wire up getrandom syscall
b13cb2001ad BACKPORT: random: Wake up all getrandom(2) callers when pool is ready
d046a9a9dc4 BACKPORT: random: introduce getrandom(2) system call
c8974959621 random32: include missing header file
63cb17ab2cc BACKPORT: random32: add prandom_reseed_late() and call when nonblocking pool becomes initialized
72b4ba2c287 BACKPORT: random32: add periodic reseeding
41ac6584d5d random: add_hwgenerator_randomness() for feeding entropy from devices
8aa61fa5c49 seccomp: always propagate NO_NEW_PRIVS on tsync
65da7412c93 seccomp,x86,arm,mips,s390: Remove nr parameter from secure_computing
11e630db1df CHROMIUM: oom: do not select new victim if current one is runnable
85c7a844aa7 CHROMIUM: DROP: mm/oom_kill: Avoid deadlock; allow multiple victims
fced5f7300e CHROMIUM: DROP: mm/oom_kill: Double-check before killing a child in our place
dde8930e798 BACKPORT: mm: oom_kill: don't ignore oom score on exiting tasks
c8f3bcefc7f CHROMIUM: mm: lower oom dump burst limit to 1
cad143a0d97 sched: turn off the TTWU_QUEUE feature
8e4100168b8 shamu: Enable ZRAM and LZ4 compression
3475a753dcf input: atmel_mxt_ts_mmi: Use wakeup key instead of power key for dt2w
2821f01165d locking/rtmutex: Use READ_ONCE() in rt_mutex_owner()
075708aa2b7 compiler.h: avoid sparse errors in __compiletime_error_fallback()
787fc9d2427 compiler: Allow 1- and 2-byte smp_load_acquire() and smp_store_release()
6fd39d38dcb locking: Remove atomicy checks from {READ,WRITE}_ONCE
e64ec9cf184 kernel: make READ_ONCE() valid on const arguments
3d1f7d06d6e kernel: Change ASSIGN_ONCE(val, x) to WRITE_ONCE(x, val)
da4a6a59f36 kernel: Provide READ_ONCE and ASSIGN_ONCE
db489e10139 compiler.h: add support for malloc attribute
7eb06cd8f2c include/linux/compiler-gcc.h: improve __visible documentation
9b1b0a8c745 include/linux/compiler-gcc.h: hide assume_aligned attribute from sparse
cd1b45ff2fa compiler.h: add support for function attribute assume_aligned
e46826f95c3 ARM: 8692/1: mm: abort uaccess retries upon fatal signal
441c5632378 mm: vmscan: lock page on swap error in pageout
ef517d5c4a5 zsmalloc: fix zs_can_compact() integer overflow
2cb58105317 mm/zsmalloc: add `freeable' column to pool stat
3a1c2032be6 zsmalloc: drop unused member 'mapping_area->huge'
28d60118cef zsmalloc: fix migrate_zspage-zs_free race condition
1849314b2cc zsmalloc: reorganize struct size_class to pack 4 bytes hole
535c8b5c69f zsmalloc: use page->private instead of page->first_page
37c8de61ee5 zsmalloc: reduce size_class memory usage
e9013edeaf4 mm/zsmalloc.c: remove useless line in obj_free()
3f120e0acb7 zsmalloc: use preempt.h for in_interrupt()
2eb763846c7 zsmalloc: fix obj_to_head use page_private(page) as value but not pointer
e1353eddb62 zsmalloc: add comments for ->inuse to zspage
632b6f92b1b zsmalloc: remove null check from destroy_handle_cache()
63dd739e5f7 zsmalloc: use class->pages_per_zspage
06ba05e8aeb zsmalloc: consider ZS_ALMOST_FULL as migrate source
8566da73610 zram: update documentation
af8e88fb208 zsmalloc: account the number of compacted pages
816c9545aae zram: add `compact` sysfs entry to documentation
2622fc55c95 zsmalloc/zram: introduce zs_pool_stats api
fca2435a522 zsmalloc: cosmetic compaction code adjustments
31e602e764e zsmalloc: introduce zs_can_compact() function
c3421254924 zsmalloc: always keep per-class stats
65f5c39b733 zsmalloc: drop unused variable `nr_to_migrate'
cfb30c517db zsmalloc: remove obsolete ZSMALLOC_DEBUG
a3db3fec6b1 zsmalloc: partial page ordering within a fullness_list
23205032085 zram: Register with show_mem notification framework
d5c4b967116 zram: restrict add/remove attributes to root only
657fd3d37e0 zram: fix unbalanced idr management at hot removal
31cafc2bcee zram: don't call idr_remove() from zram_remove()
c2d55b6a5b1 zram/zcomp: do not zero out zcomp private pages
9f1d71ffb0c zram: pass gfp from zcomp frontend to backend
d86d0806b37 zram: try vmalloc() after kmalloc()
0375f88e3c8 zram/zcomp: use GFP_NOIO to allocate streams
c2bbe28eef2 zram: make is_partial_io/valid_io_request/page_zero_filled return boolean
1ee570264f2 zram: keep the exact overcommited value in mem_used_max
ffc90208414 zram: introduce comp algorithm fallback functionality
91d89f3b5e9 zram: unify error reporting
53ef86d1071 zram: fix pool name truncation
0f07561acd0 zram: check comp algorithm availability earlier
b501be8cc7c zram: cut trailing newline in algorithm name
ea349c5004e zram: cosmetic zram_bvec_write() cleanup
79203573ce2 zram: add dynamic device add/remove functionality
de79545c6ea zram: close race by open overriding
bbf758075b9 zram: return zram device_id from zram_add()
316d54a58be zram: trivial: correct flag operations comment
3f62b1608d7 zram: report every added and removed device
cb77cddf106 zram: remove max_num_devices limitation
25a956d4cf0 zram: reorganize code layout
1eff429a989 zram: use idr instead of `zram_devices' array
50c60e10678 zram: cosmetic ZRAM_ATTR_RO code formatting tweak
cb2b155ff93 zram: Add back QUEUE_FAST_FLAG
feda824bff1 zram: Disable allocation failure logging
01170336aa0 zram: remove obsolete ZRAM_DEBUG option
4cbe1d7ba97 staging: zram: Rate limit memory allocation errors
175c59e9a77 zram: Default lz4 if available
f661ec91b8c zram: do not use copy_page with non-page aligned address
19f1cc71175 zram: fix possible use after free in zcomp_create()
75da769d13a block: zram: Backport from Linux 4.1
de18ee6d036 mm: zsmalloc: backport from Linux 4.1
19e1aa2f985 mm/zpool: add name argument to create zpool
35448ec88fa mm/zpool: use prefixed module loading
31c7505fef3 mm/zpool: implement common zpool api to zbud/zsmalloc
320661aea3b mm: swap: don't delay swap free for fast swap devices
b9fba40705d swap: fix set_blocksize race during swapon/swapoff
d70c52d1644 mm/swapfile.c: do not skip lowest_bit in scan_swap_map() scan loop
c1dbe1246d6 swap: cond_resched in swap_cgroup_prepare()
3f01796b345 initramfs: avoid "label at end of compound statement" error
ecb45cd8eca initramfs: Always do fput() and load modules after rootfs populate
19e46f87cae initramfs: finish fput() before accessing any binary from initramfs
870092de03d init/initramfs.c: resolve shadow warnings
18b2edb72e8 initramfs: add write error checks
3f6b28f79b7 initramfs: support initramfs that is bigger than 2GiB
19dc7b5d9f4 initramfs: support initrd that is bigger than 2GiB
3fc1146834f init: fix possible format string bug
4ca428fbdbe lib/decompress_inflate.c: include appropriate header file
5b34614870e initrd: fix lz4 decompress with initrd
aaa120f49c8 lib/decompress_unlz4.c: always set an error return code on failures
a85f536eaef arm: add support for LZ4-compressed kernel
1d22a4eddb0 lz4: fix wrong compress buffer size for 64-bits
9d9817ffa71 lib: lz4: cleanup unaligned access efficiency detection
89ab799c809 lib: lz4: fixed zram with lz4 on big endian machines
acdedba188b lz4: fix system halt at boot kernel on x86_64
ace2de92629 lib/lz4: Pull out constant tables
707ce44e685 LZ4 : fix the data abort issue
44a3e44b849 lz4: add overrun checks to lz4_uncompress_unknownoutputsize()
68e6fc71c04 lz4: fix another possible overrun
82a8ef2cd7d lz4: ensure length does not wrap
b3e6cf502ad lz4: fix compression/decompression signedness mismatch
920bd343a7e lib/lz4: correct the LZ4 license
ee3b0d549d9 lib: add lz4 compressor module
efcefb7421e lib: add support for LZ4-compressed kernel
eb2bff57211 decompressor: add LZ4 decompressor module
e34119aab22 rcu: Don't disable CPU hotplug during OOM notifiers
0c282fffd6d rcu: Use rcu_gp_kthread_wake() to wake up grace period kthreads
baaa4c97c4f rcu: Check both root and current rcu_node when setting up future grace period
6c8c0d2847e rcu: Make callers awaken grace-period kthread
84d6e634728 rcu: Update cpu_needs_another_gp() for futures from non-NOCB CPUs
d68096185ce rcu: Protect ->gp_flags accesses with ACCESS_ONCE()
7d9922f28f8 nohz_full: Force RCU's grace-period kthreads onto timekeeping CPU
97aab80d242 rcu: Throttle rcu_try_advance_all_cbs() execution
df047d5afd4 rcu: Flag lockless access to ->gp_flags with ACCESS_ONCE()
e5430a28566 rcu: Prevent spurious-wakeup DoS attack on rcu_gp_kthread()
5fa256caf5c rcu: Avoid redundant grace-period kthread wakeups
dccb7ca077e rcu: Move redundant call to note_gp_changes() into called function
246ee249e45 rcu: Inline trivial wrapper function rcu_start_gp_per_cpu()
ef24dba2905 rcu: Eliminate check_for_new_grace_period() wrapper function
05be4b035a3 rcu: Merge __rcu_process_gp_end() into __note_gp_changes()
fdf317e7aaa rcu: Switch callers from rcu_process_gp_end() to note_gp_changes()
12a56de04c4 rcu: Rename note_new_gpnum() to note_gp_changes()
ab4ce113a92 rcu: Make __note_new_gpnum() check for ends of prior grace periods
b236a600ee0 rcu: Move code to apply callback-numbering simplifications
5285c370f06 rcu: Fix missing task information during rcu-preempt stall
9d5878a8118 rcu: Add GP-kthread-starvation checks to CPU stall warnings
796966f5b0c rcu: Make RCU_CPU_STALL_INFO include number of fqs attempts
cd04eb7b1cd rcu: Improve diagnostics for spurious RCU CPU stall warnings
0c21b88e29b rcu: Move RCU-related source code to kernel/rcu directory
35063aa1b3b ARM: gic: fix restore order of distributor registers in gic_cpu_restore()
ae31992cef9 sync: Permit out-of order sync users
620ed1f0799 sync: signal pt before sync_timeline object gets destroyed
1a70f3bcdd6 msm-pm: Print spm registers status on hotplug failure
f97e3408b07 platsmp: Print the pending irqs in case of hotplug failure
d216aabe161 msm: platsmp: Fix few data and pointer handling issues
4d515146fb6 DO NOT MERGE: audit: Fail silently
9b05821a5e1 sysrq: FIQ and sysrq default deauthorized
1464c78b429 sysrq: Emergency Remount R/O in reverse order
41e63b2c88a netfilter: nf_conntrack: decrement global counter after object release
2c1db1b275f msm: ADSPRPC: Buffer length truncated while validation
41543bde60c msm: ADSPRPC: Free interrupted contexts on device close
1c9b9bcf3e8 power: Add charge_full_design property
2349dd8723c Power: Fan5404x: Update batt_health in driver probe.
aeb760166ea factory: Fix warning due to incorrect OF API usage
dc861fab546 power: max17042: put max17042 read code from irq handler
127ae46b7cb mmc: sdhci: Vote for new IRQ specific QoS request
9f8e6156c5f PM / Domains: Fix unsafe iteration over modified list of device links
37d010648f3 PM / Wakeup: Use rcu callbacks for better performance
b03e425805f msm: pm: use correct cpu_suspend call for Non-PSCI targets
736e5252811 arm: kernel: refactor the CPU suspend API for retention states
f269a519505 ARM: suspend: use hash of cpu_logical_map value to index into save array
22e482641ea ARM: kernel: implement stack pointer save array through MPIDR hashing
f48309b660b ARM: kernel: build MPIDR hash function data structure
399ae685542 PM / sleep: Allow devices without runtime PM to do direct-complete
f31be591d1d PM / sleep: Mechanism to avoid resuming runtime-suspended devices unnecessarily
15a865176e0 PM / Sleep: fix async suspend_late/freeze_late error handling
1df38f20abb PM / sleep: Asynchronous threads for suspend_late
0c661317e19 PM / sleep: Asynchronous threads for suspend_noirq
a4be6a166c7 PM / sleep: Asynchronous threads for resume_early
db67565b551 PM / sleep: Asynchronous threads for resume_noirq
aaa9e8572e4 PM / sleep: Two flags for async suspend_noirq and suspend_late
820be2555c0 PM / sleep / irq: Do not suspend wakeup interrupts
e2d44c4adeb PM / Runtime: Fix error path for prepare
77d43ffe50f drivercore: Avoid adding devices without pm_ops to dpm list
7bfb397ec87 idle: add a check for need_resched() after rcu_idle_enter
51c7ac7a872 cpuidle: Fix cpuidle_state_is_coupled() argument in cpuidle_enter()
c7ca98f5b87 cpuidle: delay enabling interrupts until all coupled CPUs leave idle
ca0b81f8d56 cpuidle: don't disable cpuidle when entering suspend
42cbc0608e0 cpuidle: Wakeup only cpus for which qos has changed.
51c1430f0c4 cpuidle: Check for dev before deregistering it.
848aadf83c8 cpuidle: remove cpuidle_unregister_governor()
0c9c134baee cpuidle: Make it clear that governors cannot be modules
06064087a57 cpuidle: don't call poll_idle_init() for every cpu
4a6d07325ca cpuidle: use drv instead of cpuidle_driver in show_current_driver()
3ee0dc6c039 cpuidle: call cpuidle_get_driver() from after taking cpuidle_driver_lock
3ddb34b89f8 cpuidle: replace multiline statements with single line in cpuidle_idle_call()
16d40ba019d cpuidle: reduce code duplication inside cpuidle_idle_call()
61988414474 cpuidle: merge two if() statements for checking error cases
dd0c93da2f6 cpuidle: rearrange __cpuidle_register_device() to keep minimal exit points
a4b62d2f767 cpuidle: rearrange code in __cpuidle_driver_init()
596a865ea0e cpuidle: make __cpuidle_driver_init() return void
5e5d5d5e207 cpuidle: Comment the driver's framework code
ac344d2e1dd cpuidle: make __cpuidle_device_init() return void
4d4a833f1ff cpuidle: Check if device is already registered
691571271be cpuidle: Introduce __cpuidle_device_init()
1f54130f800 cpuidle: Introduce __cpuidle_unregister_device()
4c0b51f218a cpuidle: Check cpuidle_enable_device() return value
0856f5c5d2d cpuidle: improve governor Kconfig options
e534937a8bb cpuidle: fix improper return value on error
7aec46dc7ae cpuidle: lpm-levels: Remove local_irq_enable from lpm_cpuidle_select
ecca7495c9d cpuidle: simplify multiple driver support
9cb9549d7cb cpuidle: Replace strnicmp with strncasecmp
85d555cf7d9 cpuidle: Add need_resched() check
0bbd5e4c4f7 drivers: cpuidle: Remove counting of last_residency
e2e9913a40c lpm-levels: Move cpuidle tracepoints within lpm_levels
f38ca356486 leds: Quick fix warning for blink led support
63282a684cb leds: led-class: Retain the latest user brightness request
264ec54ec28 leds: led-class: don't disable active triggers
ef5c3961f81 leds: leds-qpnp: make blink functionality synchronous
edc56b9218e leds: leds-qpnp: use the proper pwm period in LPG mode
798c8469223 leds: leds-qpnp: remove the usage of mutex_destroy for static mutex
20ac2c52c1b leds: leds-qpnp: use a single global mutex for flash led
67f5552cb15 leds: leds-qpnp: avoid calling pwm_disable when scaling leds' brightness
b4ae5b069d4 leds: leds-qpnp: bug fix for NULL pointer dereference in qpnp_xxx_set()
1f8839c692a leds: leds-qpnp: PWM period granularity auto selection for leds
3bcf12a4cda leds: leds-qpnp: correct brightness value for MPP based LEDs
f776f4b2d5a leds: leds-qpnp: avoid truncation in qpnp_led_masked_write function
be12892f5ce fs: Workaround the compiler's bad optimization
263d7773d97 pstore-ram: Use unbuffered memory by default
9b51cd8734a pstore: Use dynamic spinlock initializer
3c293a213d7 pstore: Correctly initialize spinlock and flags
4a63b6f1eca pstore: Allow prz to control need for locking
05fe6739d9c pstore: Make spinlock per zone instead of global
7d0e22cc349 fs/pstore: Optimization function ramoops_init_przs
2aaa9dbd192 pstore: Fix return type of pstore_is_mounted()
6d15fb63a4e pstore: Actually give up during locking failure
03787afee70 pstore: make the unlock code a bit simpler
65ae00639d5 pstore: Fix the ramoops module parameters update
e2b639febf4 Revert "drivers: base: close firmware file after use"
340668d5829 mm/page-writeback.c: fix divide by zero in bdi_dirty_limits()
a4b28163002 mm/page-writeback.c: add strictlimit feature
a47c7ea9bd6 mm: page-writeback: fix page state calculation in throttle_vm_writeout
4edbe7d72fa Revert "mm: change max readahead size to 512KB"
e6a80a5676a readahead: make context readahead more conservative
41edbc1ef4b writeback: Do not sort b_io list only because of block device inode
7756c5d2fb0 writeback: Fix occasional slow sync(1)
88b1b3c6824 writeback: fix writeback cache thrashing
8e46917bb23 writeback: fix race that cause writeback hung
2f3c5734091 sync: don't block the flusher thread waiting on IO
8c8f5e48bc3 ARM: 8328/1: remove empty preprocessor #else branch
1a15b570d1a ARM: 8160/1: drop warning about return_address not using unwind tables
4b3b52f593a ARM: 8158/1: LLVMLinux: use static inline in ARM ftrace.h
d512781db92 scripts: remove unused function in sortextable.c
dfc14190972 scripts/sortextable: support objects with more than 64K sections.
9a41e484f22 scripts/tags.sh: catch 4.9-rc6
4759f6ef040 scripts: Build in parallel if requested
7723c99fa1c scripts: Refactor build-all.py's build
1fcff46baf6 tty: fix memleak in alloc_pid
00abe116e2f diag: dci: Send mode reset command to the apps processor
b2d23558d8c diag: Reduce error message frequency
04809c6540b msm: Fix high load average from uninterruptible waits

   * packages/apps/crDroidSettings/
353ab6c Merge pull request #98 from EthanSiva/7.1
ade16c4 Add lenovo k6

====================
     10-09-2017
====================


====================
     10-08-2017
====================


   * frameworks/base/
67eddd0e720 Revert "base: Clean up systemUI tuner"

   * kernel/moto/shamu/
134952889b3 cpufreq: flush queued work before freeing policy
f33c65b090f cpufreq: Resolve CPUFREQ_NOTIFY issue
bdd9802f489 cpufreq: Refactor cpufreq_set_policy()
223b2e78437 cpufreq: stats: Fix memory leaks when updating stats table
6d13face47c cpufreq: Iterate over all the possible cpus to create powerstats.
debd7423e08 cpufreq: conservative: Allow down_threshold to take values from 1 to 10
bb75d8e1804 cpufreq: move policy kobj to policy->cpu at resume
df81a1a7419 cpufreq: remove race while accessing cur_policy
c2d6c6730ec cpufreq: Fix timer/workqueue corruption by protecting reading governor_enabled
24e47030e66 cpufreq: Protect against hotplug in cpufreq_register_driver()
8c5ba3d8d5f cpufreq: Use correct locking for cpufreq_cpu_data
0cdd88eaaeb cpufreq: Add if cpu is online check in show
71ab02b870c cpufreq: preserve user_policy across suspend/resume
1705f7dd0db cpufreq: Clean up after a failing light-weight initialization
16495b579ca cpufreq: use memcpy() to copy policy
a7b4777a0e7 Makefile: Enable ld fix for cortex-a53 errata 843419
aecf48a57d9 shamu: Disable CC_OPTIMIZE_FOR_SIZE
ec3084d27ea Makefile: Readd opt flags
a31342f1c37 ./Makefile: tell gcc optimizer to never introduce new data races
6608595f4b6 ARM: VFP: use optimal flags for Krait
abe0eaeb94f msm: mdss: skip configuring when pipes are dirty
206df51e026 msm: mdss: fix ret value during error case
51b46b692f0 msm: mdss: allow unused SMP for targets with high number of SMPs
ce22159e397 msm: mdss: Remove the unused has_buf pipe member
57ce3e7a63b msm: mdss: Remove pwm_disable from backlight pwm driver
a9b98765e97 msm: mdss: Correct the format specifiers in sscanf function
2b51af92158 msm: mdss: Remove partial update region delays
182bb922314 msm: mdss: Update RT priority
be4c19064f9 kgsl: Increase priority of RT thread

   * packages/apps/Gallery2/
947a32034 Gallery: Kill media effect dialog on movies
121bd8429 Gallery2: Fix crash when muting a video
e17192105 Fix gallery crash when trimming video

====================
     10-07-2017
====================


   * hardware/qcom/audio-caf/msm8994/
e91a5f0f Merge remote-tracking branch 'caf/LA.BF64.1.2.3_rb1.17' into cm-14.1-caf-8994

   * hardware/ril/
d8fb8ff Fix multi sim support and warnings

   * hardware/ril-caf/
ef31609 Fix multi sim support and warnings

   * kernel/moto/shamu/
9d0afa63dc2 shamu: bluetooth: Remove transmission timer
bd464fd3fef shamu: bluetooth: fix possible memory leak in kernel
5bf1d116e07 shamu: bluetooth: Add missing PROC in proc_show
6f65d41819a Bluetooth: bnep: fix possible might sleep error in bnep_session
bbb908fdc72 Bluetooth: cmtp: fix possible might sleep error in cmtp_session
4cba9925a36 Bluetooth: hidp: fix possible might sleep error in hidp_session_thread
865d4213d07 bluetooth: Configure DUT as MASTER for outgoing connection requests
a5e0a5c452b BACKPORT: Bluetooth: Fix potential NULL dereference in RFCOMM bind callback
f3e68903b83 bluetooth: Send HCI RESET during BT OFF
8f37126b661 hidp: initialized hidp_session struct pointer to NULL
131b7bfb386 BLUETOOTH: Add NULL Check for pointer
ed16151cbaf bluetooth: Fix SCO connection synchronization.
e0696542c22 Bluetooth: Release locks before sleeping for L2CAP socket shutdown
07a903dd3bf Bluetooth: Return the correct address type for L2CAP sockets
ff61acb456f Bluetooth: Store source address of HCI connections
13320daab52 Bluetooth: Store the source address type of LE connections
45891e0a7fa bluetooth: Initiate authentication before sending l2cap connect response.
cf8399e8762 Bluetooth: Fix redundant encryption when receiving Security Request
b4afc329ef8 Bluetooth: remove unnecessary check on BT_CLOSED socks during accept
035fa41dcc5 Bluetooth: Fix crash in l2cap_chan_send after l2cap_chan_del
6d255df725b Bluetooth: Avoid Spurious AMP node access if not created
b84fb2fc16f Bluetooth: Fix ERTM L2CAP resend packet
a46eb82e598 bluetooth: Notify connection deletion only for SCO/ESCO links.
a7926123777 bluetooth: Add HCI device to device list after initialization
c6e28a3d1e4 Bluetooth: change cancel_delayed_work to cancel_delayed_work_sync
6258d8eec35 power: bcl: Handle hotplug mask like thermal mask
20c6d688e3b Revert "power: bcl: Improve battery monitor work"
6e59edb9da3 msm_thermal: Unbreak interrupt mode
ef2c24cf733 shamu: Enable FB_MSM_TRIPLE_BUFFER
ea64bef7903 shamu: Disable SLUB_DEBUG
4daa5203fb0 shamu: Disable sync before suspend
1756eb0eab1 power: make sync on suspend optional
3eae7b6f4ce sync: Fix a race condition between release_obj and print_obj
8a13d82fbec cpufreq: cpu-boost: Make cpufreq wq unbound
75bace2b618 cpufreq: cpu-boost: New enhancements
bd5214d2558 pinctrl: msm: prevent bogus wake up from suspend
297df6af20f pinctrl: msm: fix potential NULL pointer dereference
c4ca4cd2f27 pinctrl: fix a memleak when freeing maps
26356dd3b33 netfilter: xt_qtaguid: fix memory leak in seq_file handlers
f5bca669b1b shamu: Enable WAKE_GESTURES
fc5cdb31936 drivers: input: Add support for wake gestures
caf652df07c msm_serial_hs: Modify the PM ioctl
378c63ab3c1 fs: Add TTY PM IOCTLs to compat table
b8cfb09b346 serial: tty: msm_hs_uart: Fix the compat table
e7d267d7199 msm_serial_hs: Handle core interrupt irrespective of wakeup interrupt
c5b8b002301 msm_serial_hs: ensure clock_count follows clk_state
d8b30df4d1a msm_serial_hs: Handling spinlocks during error case
7b6931c81b9 TTY: msm_smd_tty: Fix clean up tty devices in fail case
afdb5dfba15 TTY: msm_smd_tty: Fix client notification issue in suspend state
84d8143cfd1 TTY: msm_smd_tty: Fix driver addition/removal error
c0f06729439 TTY: msm_smd_tty: Add warning to driver removal function
779f132a9b8 BACKPORT: sched/rt: Reduce rq lock contention by eliminating locking of non-feasible target
5a956a6c463 sched/rt: Avoid moving rt task if destination CPU does not run low priority task.
2887eb3d408 sched/cputime: Fix prev steal time accouting during CPU hotplug
31858d12619 sched/cputime: Fix invalid gtime in proc
c3238775ad3 sched: reinitialize rq->next_balance when a CPU is hot-added
3da42f00a1b sched/fair: Optimize find_idlest_cpu() when there is no choice
becd48e124f sched/idle: Optimize the generic idle loop
d5b7c3025d9 sched: Remove get_online_cpus() usage
86329774e8a cputime: Fix jiffies based cputime assumption on steal accounting
5ebe5919c0e sched/rt: really force updates rq clock in pick_next_task_rt
6998846655e sched/fair: Fix tg_set_cfs_bandwidth() deadlock on rq->lock
19df43fb194 sched: Avoid throttle_cfs_rq() racing with period_timer stopping
5af35c2d53b sched/balancing: Prevent the reselection of a previous env.dst_cpu if some tasks are pinned
1d1850aac8c sched/__wake_up_sync_key(): Fix nr_exclusive tasks which lead to WF_SYNC clearing
d751db1b393 cpumask: Fix cpumask leak in partition_sched_domains()
2a4de4658f8 sched: Fix inaccurate accounting for real-time task
50d026ad90c sched/idle: Avoid spurious wakeup IPIs
dbd2798c884 sched/fair: Optimize find_busiest_queue()
79ed013c1f8 sched: Remove one division operation in find_busiest_queue()
753ebf4a306 sched: Fix bug in average nr_running and nr_iowait calculation
26391b44be3 sched: Fix race in idle_balance()
81ed144b352 sched/loadavg: Fix loadavg artifacts on fully idle and on fully loaded systems
bf348b1b7bc sched: Allow migrating kthreads into online but inactive CPUs
857df0cf292 kernek/fork.c: allocate idle task for a CPU always on its local node
81dc34c9f9e workqueue: Fix flag collision
249435ed02a workqueue: implicit ordered attribute should be overridable
d1a1d1a0b56 workqueue: restore WQ_UNBOUND/max_active==1 to be ordered
fbe6c58f015 workqueue: allow rescuer thread to do more work.
4b17c15c01f timer: optimize apply_slack()
709328e5173 cpu: Handle smpboot_unpark_threads() uniformly
77a6a79bef1 cpu: Defer smpboot kthread unparking until CPU known to scheduler
722f994e8e2 smpboot: use kmemleak_not_leak for smpboot_thread_data
fa0b1487653 sched: Add a check for cpu unbound deferrable timers
ff58cddaafe nohz: Convert a few places to use local per cpu accesses
5e8c99e43dc shamu: Remove TIMER_STATS
974d88ebcf5 time: Remove CONFIG_TIMER_STATS
f14a95eb844 timer: reduce cache bouncing of deferral timer wheel
72e61930556 timer: make deferrable cpu unbound timers really not bound to a cpu
8b5043b2390 msm: thermal: Fix corner cases in thermal driver
afd64ff6a25 msm: mdss: Fix null dereference
e7dac139e8a msm: mdss: Fix potential deferencing of null pointer
46dae5bfa98 msm: mdss: reduce log level when ping pong timeout happens
55afee55c17 mdss: compat: suppress unnecessary prints
c40749e0792 msm: mdss: Fix uninitialized return value for compact ioctl function
8b647243387 msm: mdss: prevent excessive logging after shutdown requested.
5b8d68d8921 mmc: sdhci-msm: Fix HW issue with power IRQ handling during reset
b918b2ffce5 mmc: sdhci-msm: fix possible NULL pointer dereference
adbdfe8218d msm: vidc: Increase timeout for power collapse
1f0897c9fa5 msm: vidc: pm qos stability fixes for video driver.
72da398518e msm: vidc: disable CPU L2 cache PC during video sessions
dee4273d591 qos: wake up cores based on the qos updated cpu mask
f704086707c qos: Register irq notify after adding the qos request
36b52ca5a86 qos: Disable irq notifier when qos request is removed
a264f25ec9a qos: Pass the list of cpus with affected qos to notifer
19c89b4a1fa QoS: Enhance framework to support cpu/irq specific QoS requests
238fd61468b irq: smp_affinity: Initialize work struct only once
61f56b457eb genirq: fix race condition in irq_affinity_notify
1e2ae4f0b7a irq: Allow multiple clients to register for irq affinity notification
eaa9bc54307 irq_work: register irq_work_cpu_notify in early init
8dd79acc37e msm: vidc: Fix packet size check for SESSION_RELEASE_BUFFER_DONE
6c9ae28e4ae msm: vidc: Protect debug_buffer access in core_info_read with lock, part 2
13607af8a7b msm: vidc: Defer suspend till Venus goes to power collapse
20d3cf8ea0a msm: vidc: Fix timestamp for EOS buffer
4363c2351db msm: vidc: skip fps round off when client sets 1 fps
149eb1b77a9 msm: vidc: Handle invalid core state
83a95640ac9 msm: vidc: Clean session when failed to open instance
cf2238037c0 msm: vidc: Handle max clients error properly
fcecd7643a8 msm: vidc: Fix SYS_ERROR handling
49a2c7e9db4 msm:vidc: Fix klockwork errors in video driver.
626a03e8f9d msm: vidc: Fix ion_handle checking before mapping buffers
1c5a41ebb56 msm: vidc: Protect debug_buffer access in core_info_read with lock.
361984399b9 msm: vidc: Increase firmware unload delay
154363d40a0 msm: vidc: WARN_ON() reveals fuction addresses
b2714e2244d msm: vidc: return EBUSY when hw is overloaded
9b29b1cc7ce msm: vidc: Protect suspend operation with core lock
4676cf3f509 msm: vidc: Update Venus DCVS algorithm for 8994V2
2559e296cba msm: vidc: Cancel pending power collapse works in core_release
bd168e74b55 msm: vidc: Handle the dangling sessions in hfi sessions list
066319aade5 msm: vidc: Advertise extradata size in queue_setup()
04a0d73ad18 msm: vidc: Unload firmware immediately after sys error
f6dd0bb511b msm: vidc: Error handling when core is in bad state
95cb6bc5447 msm: vidc: Convert macros into inline functions
7876858756e msm: vidc: fix a race condition in OCMEM free function
bb8e8c48c8e msm: vidc: Scale clocks and buses on V4L2_CID_MPEG_VIDC_SET_PERF_LEVEL
767f6306cea msm: vidc: Fast forward power collapse features
cb7b29bea39 msm: vidc: Don't query the V4L2 ctrl framework for checking thumbnail mode
03602d07275 msm: vidc: Increase the MIN DRAIN RATE when DCVS is enabled
92074b7def0 msm: vidc: Validate buffer prior to releasing reference
ab6c2d01b2f msm: vidc: limit only OCMEM vote to lowest vector
09e7661dbcc msm: vidc: Check video buffer handle for Null pointer access.
756cbd4b36e msm: thermal: Fix usage of core control toggle
9e2565d286d power: bcl: Improve battery monitor work
b9758ed42d7 power: bcl: Handle hotplug sensibly
e992e18f1b4 mm: vmstat: make vmstat_work cpu bound during requeue
01e4f8c0777 lowmemorykiller: Don't count swap cache pages twice
be2c73ccd8b mm/vmpressure.c: fix race in vmpressure_work_fn()
4c28a493967 vmpressure: make sure there are no events queued after memcg is offlined
5907c8caf07 vmpressure: do not check for pending work to prevent from new work
2e1c62640fe vmpressure: change vmpressure::sr_lock to spinlock
944cd91d640 lowmemorykiller: Account for unevictable pages in vmpressure notifier
8def7e3a057 lowmemorykiller: avoid false adaptive LMK triggers
76ac98f735b lowmemorykiller: adapt to vmpressure
d9d4214baf1 mm: vmpressure: account allocstalls only on higher pressures
f33be895393 mm: vmpressure: scale pressure based on reclaim context
19a248627f4 mm: vmpressure: allow in-kernel clients to subscribe for events
c2fb678453e lowmemorykiller: Run the lowmemory notifier when killing
5a993b2c7d3 lowmemorykiller: Dump out slab state information
d5241cc7460 lowmemorykiller: enhance debug information
3fe574f0a70 mm, oom: make dump_tasks public
c5a8e935235 mm: Add notifier framework for showing memory
6cf4ec838cc shamu: Enable LMK_ADJ_RBTREE
ad4b22981a7 lowmemorykiller: account for unevictable pages
d975ef9ae7f lowmemorykiller: Do proper NULL checks
121e2fe6804 fs: avoid adding non-thread-group task to LMK rbtree
c837f85fec1 fs: support task's adj rbtree
9f648e6c3da kernel: avoid adding non-thread-group task to LMK rbtree
25d313ed5f8 kernel: support task's adj rbtree
9b0f004d766 lowmemorykiller: maintain LMK rbtree with signal->adj_node
93147ff32be staging:android:lmk: read rb tree root with spinlock
4fc3f42109c lowmemorykiller: Check tgid with rcu lock held
bbd0d0fe1a7 drivers:lmk: Fix null pointer issue
701294c1a5c drivers:lmk: Fix double delete issue
55aeef7c351 drivers:lmk: implement task's adj rbtree
be14e0c02dd staging: android: lowmemorykiller: skip dying or exiting task
f10923b8174 Revert "trace: memkill: trace LMK and OOM kills"
88694381ac9 Revert "trace: memkill: per-zone page state for LMK"
f07413a939b shamu: Enable dropbox
40094256508 cpufreq: Break out early when frequency equals target_freq
ab09a4c25ed cma: Make the default CMA region not reserved by default
116b779447b hrtimer: Prevent stale expiry time in hrtimer_interrupt()
19a53f558ff arm: idle: add missing need_resched check
e261342d928 cpuidle: kick all cpu after idle handler installed
f572247af29 net:rmnet_data remove warning message for invalid cmd
4faf253c185 net: rmnet_data: Clear VNDs upon unregistration
624185b8be9 fbdev: core: Initialise structure to prevent kernel information leak
d026bf5c6b7 drivers: base: close firmware file after use
d4d79b101c3 ion: cma_heap: free mem if fail to create sg_table
2586ea02b3b ion: shrinker free pages even for unmovable page requests
0bfba168e13 ion: retry during race with shrinking/allocating
936070374bd ion: fix remaining instances of sg_dma_len
234ff15ff2f ion: validate ion client in ion_debug_client_show() and extract data
b3240930f6d ion: WARN when the handle kmap_cnt is going to wrap around
fbd13f78caa ANDROID: ion: Fix uninitialized variable
e571d88d208 UPSTREAM: staging: ion: Fix error handling in ion_buffer_create
57b36f30183 staging: ion: fix corruption of ion_import_dma_buf
c20e4087e16 slub/memcg: cure the brainless abuse of sysfs attributes
fa64b78c10e mm: compaction: fix the page state calculation in too_many_isolated
1e934296747 mm: vmscan: fix the page state calculation in too_many_isolated
d606ba578a0 mm: kmemleak: allow safe memory scanning during kmemleak disabling
825790dfc39 kmemleak: change some global variables to int
76b5b32b92b kmemleak: allow freeing internal objects after kmemleak was disabled
dc3d044c9a5 kmemleak: free internal objects only if there're no leaks to be reported
82f42059aa4 kmemleak : Make kmemleak_stack_scan optional using config
25d5b031458 mm: kmemleak: avoid false negatives on vmalloc'ed objects
86160330a0b mm/vmalloc.c: Correctly calculate VMALLOC_TOTAL
580bab576c5 mm/slub: don't wait for high-order page allocation
bda7644a967 mm: use managed_pages to calculate default zonelist order
44d5e809159 mm/page_alloc: move freepage counting logic to __free_one_page()
dfa92509a84 mm/page_alloc: add freepage on isolate pageblock to correct buddy list
937abf46084 mm/page_alloc: fix incorrect isolation behavior by rechecking migratetype
38c1428f1bb mm: correctly update zone->managed_pages
78041bdca52 mm: use a dedicated lock to protect totalram_pages and zone->managed_pages
022ceac7b26 mm: accurately calculate zone->managed_pages for highmem zones
5084a50af9d DO NOT MERGE: CHROMIUM: selinux: Do not log "permissive" denials
5523bb3d630 DO NOT MERGE: audit: Mute userspace and kernel audit logs
cdd6d4c2d15 msm_thermal: Re-evaluate hotplug for unexpected cpu online
2b1b8c3599a msm_thermal: Make logs consistent with bcl
704d5a2cb0b power: bcl: Re-evaluate hotplug for unexpected cpu online
1f91b30fd7b power: bcl: Online a CPU only if it is offlined by BCL
9d62a1cc8b3 qcom-cpufreq: Use CLKFLAG_NO_RATE_CACHE
849c7919527 cpufreq: Check current frequency in device driver
cf612ebac8d ARM: dts: msm: Remove Gfx warm to normal temperature monitor
7f54b25c6b6 ARM: dts: 8084: Online cores that thermal driver offlines
d9061795baf msm: thermal: Check clients request just after frequency thread init
a774e61d50d msm: thermal-dev: Protect IOCTL from race condition
ad91be5329b msm: thermal: Retry hotplug when exiting from suspend
a36340dd016 msm: thermal: Online only cores, which are hotplugged by KTM
2784838429e msm: thermal: Add support to online the hotplugged cores
cfda363d19a msm: thermal: Add sysfs nodes to control parameters
8bfcb04b4e3 thermal: tsens: Don't cast iomem pointers to unsigned long
3c3ed469069 msm: thermal: Check temperature only if probed
011fb29ae0c msm: thermal: Optimize locking in thermal frequency mitigation thread
da513aeff1d msm: thermal: Limit the emergency mitigation messages
c8d4270bddb msm: thermal: Store temperature of tsens on kernel panic notification
98a44a46442 thermal: msm: Remove early init from board file
5805246835f msm: thermal: Prevent mitigation if not required
4eb566a9dc5 thermal-core: Fix to send correct trip type to get trip temperature
cc32aef0f40 msm: thermal: Add RT priority to kernel hotplug thread
19d3e4356a1 msm: thermal: Proceed thermal late init only if probe is successful
50cc4d3fcc5 msm: thermal: Decouple Gfx phase control monitoring
ff626730465 msm: thermal: Add RT priority to kernel thermal threads
cecf1718d65 thermal: tsens: Fix TSENS Upper/Lower IRQ type
b1ea8770e7c thermal: tsens: Add NULL pointer check for id
98663f2f7b9 arm/dt: 8084: Set KTM to drop 2 cores
82cf9c0b971 ARM:dts:msm:Set the shutdown low gauge vbat
c49564e0ef0 power: max17042: Limit battery psy uevent updates.
31e5ece8db4 power: max17042: add retry logic if reg rw fails
9cb3d5c308a power: max17042: Force POR on Bad FCC
c3d34096b86 power: max17042: Increase High Threshold for FCC reporting
8c4b26dab2b power: max17042: Add dropbox events for Full Cap deviation.
c3c99dccbdf Revert "power: max17042: Force POR on Bad FCC"
11cd65f0e73 drivers: misc: add dropbox sysfs interface driver
e27f3aeaf25 power: smb135x: Add Temp check at PON
822b3458656 power:bcl:new smb algorithm on bcl
3d7a0af9902 cpufreq: fallback to interactive if governor is not found
1e6ed4337c0 cpufreq: interactive governor drops bits in time calculation
ec43b91745f cpufreq: stats: Don't update cpufreq_stats_table if it's NULL
0567063e3d0 cpufreq: stats: Print error messages if table initialization fails
01a694771a4 cpufreq: Correct the data reported in all_time_in_state
ce2647b1e8a cpufreq: interactive: Remove boost pulse
051bc79bbf3 cpufreq: interactive: Do not reschedule timer if policy->max changes
bb0a8dcf071 cpufreq: interactive:call __cpufreq_driver_target() for cur frequency
9e8338f9349 cpufreq: interactive: don't skip waking up speedchange_task if target_freq > policy->cur
8808dda88ea cpufreq: interactive: prevents the frequency to directly raise above the hispeed_freq from a lower frequency.
ad2ec485f18 cpufreq: interactive: Reschedule timer if min_freq is reduced
9abe86dabb5 CHROMIUM: cpufreq: interactive: calculate load before freq change
7aa579d3ead cpufreq: interactive: Rearm governor timer at max freq
5e4dafe51d1 CHROMIUM: Replace obsolete strict_strtoul calls.
fd5317ea2cb CHROMIUM: cpufreq: interactive: validate above_hispeed_delay
9fec3f100cf cpufreq: interactive: Several optimizations
f7319ccbc6a cpufreq: Return directly in __cpufreq_get if policy is NULL
d01cf874fc0 cpufreq: interactive: Record hispeed_validated_time in timer function
76ece02de50 cpufreq: interactive: Exercise hispeed settings at a policy level
68d60af41f2 cpufreq: interactive: Make window alignment optional
b7c71041bd4 cpufreq: interactive: Add max_freq_hysteresis feature
e62938cb207 cpufreq: interactive: Use del_timer/add_timer_on to rearm timers
a9bc6ac0574 cpufreq: interactive: Cache tunables when they are created
b198573cfaa cpufreq: interactive: Round up timer_rate to match jiffy
f3656c550ca cpufreq: interactive: Reset last evaluated jiffy in idle callback
869a6b6c352 cpufreq: interactive: Align timer windows for all CPUs
4878f30ab47 cpufreq: interactive: Move cached_tunables into cpuinfo
0d298840a1e cpufreq: interactive: Remove sampling_down_factor
580bc1c5bbe cpufreq: interactive: Revert sync freq feature
076eb2e64ba cpufreq: interactive: Revert sync on thread migration optimizations
96b71a448c6 Revert "cpufreq: interactive: Allow 1 ms error in above_hispeed_delay comparisons"
314d96e5675 cpufreq: interactive: BUG_ON when tunables are NULL after init
44372deced5 cpufreq: interactive: Fix freeing of cached tunabled during module_exit()
7fabc9befc2 cpufreq: interactive: Revert timer start modification
24862a5710b cpufreq: interactive: Make common_tunables static
50693a6e4d2 cpufreq: interactive: Permanently cache tunable values
1b43a1acff2 cpufreq: interactive: remove compilation error from commit 49cc72365fb7ee87762a7ccc6a32ef68627216c5
348bf93c286 cpufreq: interactive: turn boost_pulse off on boost off
794e9b76962 cpufreq: interactive: fix NULL pointer dereference at sysfs ops
4824fbc493e cpufreq: Interactive: Implement per policy instances of governor
60a01804614 cpufreq: interactive: Remove unnecessary cpu_online() check
0dcf3f8a95a cpufreq: interactive: Move definition of cpufreq_gov_interactive downwards
f01d1ff5289 block: disable add_random
dd5f87cb50d block: disable entropy contributions for nonrot devices
4e22ee575b3 cpufreq: Introduce new relation for freq selection
5ddd43ae09a msm: lpm_levels: return new idle level to cpuidle framework
ccdc8253153 drivers: lpm-levels: Don't allow idle low power modes during resume
8ec3b1dfbcc msm: lpm-levels: Fix wakeup time for suspend
c4ff14eb5b9 msm: lpm-levels: Fix truncation of wakeup time
c860ea3ad58 msm: Use 64 bit type for sclk
c964d326bda msm: mpm-of: fix for "cxo_lpm_clk is unbalanced" slowpath warning.
057a83afe80 apq8084: disable spurious WARN in rcg_clk_prepare
b8d25fd6456 msm: kgsl: Add a sync fence timeout callback
e5aa2bad9c4 sync: Only print details for active fences
7d55df24217 sync: Add a "details" callback for sync points
5eb74e1640e msm: kgsl: Separate HW_FAULT register for A4XX
0ee2f551591 apq8084: gpu: Vote against deep low power modes correctly
f95395a9460 msm: kgsl: Wake up GPU only for touch events
772e0de1f19 msm: kgsl: Add registers and function to read the RBBM_ALWAYSON_COUNTER
ddcb7100856 msm: kgsl: Add the oxili_rbbmtimer_clk to the list of gpu clks
8203da679b3 msm: kgsl: Check the address range before mapping to GPU
edd9ca691e0 msm: kgsl: Clear pending transactions from VBIF on hang
1d458d8ef8f msm: kgsl: Check for integer overflow before allocating memory
ab07f5cfaa0 msm: kgsl: Remove event worker
7bb680f10b6 msm: kgsl: Add spinlock last timestamp in kgsl_sync
18acc89a0d8 msm: kgsl: Add compat.h header explicitly
801c501cf07 ARM: dts: msm: disable support of 50MHz for i2c for apq8084
3c131e5b9e0 msm: kgsl: Unbind the kgsl-event workqueue
4518017b76b msm: kgsl: Ratelimit memory related error messages
62bae70cc90 PM / sleep: unregister wakeup source when disabling device wakeup
3b1f36d30db mdss: move to a kthread for vsync_retire_work_handler
eca64ef0cfb kgsl: convert some workqueues to use kthreads
148a60edacf tty: Fix hang at ldsem_down_read()
e9da502ea4a proc: much faster /proc/vmstat
00b4d3e0575 msm: properly unlock mutexes
69f7e18da62 msm: vidc: Convert realloc to resource managed malloc to avoid memleak.
744f580ac67 kthread_work: wake up worker only when the worker is idle
fe3aea5c88e msm: vidc: avoid crash due to division by zero
abab91e7e1a PM: Fix a bug in dpm_suspend_late()
c48edf33ad5 PM / Sleep: Print last wakeup source on failed wakeup_count write
0f0266ccc1f power: increment wakeup_count when save_wakeup_count failed.
5319433fd13 power: validate wakeup source before activating it.
cc32b2bf5c3 wakeup: Add the guard condition for len in pm_get_active_wakeup_sources
8a19dd26b23 mm: slub: Default slub_max_order to 0
efd3730657e binfmt_elf.c: use get_random_int() to fix entropy depleting
16543bafafd fs/namei.c: fix potential memory leak in path_lookupat
abea3f0fb0d msm: kgsl: Bump the GPU frequency for long blocks of processing
a419639d81a PM: devfreq: Use high priority workqueue
d67b1bfa4b7 PM: devfreq: Fix simple_ondemand crashing on startup
8fb4501a2b0 msm: kgsl: set the correct max_state
4c907f5785a msm: kgsl: Report correct GPU frequency in sysfs
275c971a6c8 fuse: initialize the flock flag in fuse_file on allocation
d9a8381226c Add padding field to fuse_open_out
c8a6ce43b9d Add blink support to kernel.
7235b6a6d24 fs: fuse: fix invalid write bypass
b1ed126d852 fs:fuse: Disable shortcircuit when mmap is called on a file
2079ab63a25 fs:fuse: Ensure update of fuse inode attributes in shortcircuit
aded50f65e8 fuse: Add support for shortcircuited read/write for files
1ade3a410f4 fs: push sync_filesystem() down to the file system's remount_fs()
6c6349ad193 fuse: fuse_flush() should wait on writeback
33a8c19cc61 fuse: Implement write_begin/write_end callbacks
44b95bc005a fuse: Turn writeback cache on
fe4d829c33c fuse: Fix O_DIRECT operations vs cached writeback misorder
d1b1422d376 fuse: restructure fuse_readpage()
de457f72a91 fuse: Flush files on wb close
55f67c4b217 fuse: Trust kernel i_mtime only
58dca7bc295 fuse: Trust kernel i_size only
ae916862876 fuse: Prepare to handle short reads
6f67d664826 fuse: don't invalidate attrs when not using atime
c2b29f1c0a6 fuse: fix "uninitialized variable" warning
1dfb282645f fuse: Connection bit for enabling writeback
a664c1e28f6 fuse: Linking file to inode helper
4645ed31d56 fs: fuse: lock the new non-CMA page before replace_page_cache_page()
a58df166cc1 net/core/flow.c: Fix CPU hotplug callback registration
963f9a19863 mm, zswap: Fix CPU hotplug callback registration
247559d2ab5 mm, vmstat: Fix CPU hotplug callback registration
d5bb76c767e profile: Fix CPU hotplug callback registration
894c3084c48 trace, ring-buffer: Fix CPU hotplug callback registration
a1c178e75d4 drivers/base/topology.c: Fix CPU hotplug callback registration
6aea139d343 arm64, debug-monitors: Fix CPU hotplug callback registration
9beb75c4b29 arm64, hw_breakpoint.c: Fix CPU hotplug callback registration
40bf8efdc45 arm, hw-breakpoint: Fix CPU hotplug callback registration
217e047c1c0 CPU hotplug, perf: Fix CPU hotplug callback registration
ff0c0adf9ae Doc/cpu-hotplug: Specify race-free way to register CPU hotplug callbacks
f528ad2f3d6 CPU hotplug: Provide lockless versions of callback registration functions

   * packages/apps/Settings/
cc2d4958c6 Settings: Correct german translation for 1 registered fingerprint

   * system/bt/
b882eee2 Fix allocating buffers of the right size when BT_HDR is included

====================
     10-06-2017
====================


   * kernel/cyanogen/msm8916/
0718afd564a Merge remote-tracking branch 'msm8916/cm-14.1' into cm-14.1

