====================
     10-14-2017
====================


   * device/moto/shamu/
74ca2a14 healthd: Update
35443c23 shamu: Allow hal_graphics_allocator to access vendor files
bc1e809d shamu: sepolicy: Fix sysfs_devices_system_cpu label
599082bc lights: Update
6a66dbbc shamu: sepolicy: Allow system-server access to sensor devices
cdaf3821 shamu: Switch to bcm interface for NFC

   * frameworks/base/
a517313305e BatteryBar: Fix string inconsistency
8f6c415618f SystemUI: enable NFC tile
3b0d2f0d6e9 ExpandedDesktop: Avoid fiddling with keyguard
66214685b0a Add NavBar toggle [1/2]

   * kernel/moto/shamu/
fba7daf180e driver core: bus: Fix a potential double free
a2700292227 epoll: fix race between ep_poll_callback(POLLFREE) and ep_free()/ep_remove()
59f548898b1 Revert "epoll: use freezable blocking call"

   * packages/apps/crDroidSettings/
5cc157c CustomSeekbarPref: Restore crdroid version layout
d2b36c1 BatteryBar [2/2]
bdcc332 Add NavBar toggle [2/2]

====================
     10-13-2017
====================


   * device/moto/shamu/
94cc2428 shamu: Add PowerHAL implementation

   * frameworks/base/
a7681cfabdf Clean up of expanded desktop policy and flags
005782b9260 PhoneWindowManager: Add missing check for immersive mode
d71a99553be Treat default value that wasn't found as empty value.
50657b6da72 Merge branch 'lineage-15.0' of https://github.com/LineageOS/android_frameworks_base into 8.0

   * packages/apps/Settings/
77e2e7619c Settings: Switchbar bringup for expanded desktop

   * packages/apps/crDroidSettings/
e19d082 crdroid: lockscreen: Fix persisting value for max notifications
2a0bef1 Added modded marginov color picker
0af61f0 crdroid: Squashed commit for Expanded Desktop [2/2]
47ce784 crdroid: Bring up display fragment
7bf36a7 crdroid: Give FAB some space

====================
     10-12-2017
====================


   * build/make/
b36d3ba39 Merge branch 'lineage-15.0' of https://github.com/LineageOS/android_build into 8.0

   * device/moto/shamu/
e088c3da Revert "overlay: Disable double tap to wake"
ba801fa2 power: Make powerHAL compatible for passthrough HIDL design
90b62849 Revert "power: Add Platform-level sleep state stats for angler"
b173cc18 Revert "power: Add set_feature and get_feature to HIDL validation"

   * frameworks/base/
bbe4ce7b7a2 Check for null callerPackage in getStorageEncryptionStatus
b3f0c07e90c Camera: Use TextUtils.isEmpty to check null + empty
4e1d412602c Merge branch 'lineage-15.0' of https://github.com/LineageOS/android_frameworks_base into 8.0

   * kernel/moto/shamu/
da2a8f4b1d5 shamu: Disable RBCPR logs
4ce23cbfcec shamu: Update defconfig
0bd922269ac usb: gadget: ci13xxx: Fix define scope
08d213df336 lib: asn1_decoder - add MODULE_LICENSE("GPL")
bf14bbb7349 ASN.1: Handle 'ANY OPTIONAL' in grammar
cdaac58e5bd ASN.1: Fix non-match detection failure on data overrun
c649dbb201f ASN.1: Fix actions on CHOICE elements with IMPLICIT tags
7557d91a9b5 lib/asn1_decoder.c: kernel-doc warning fix
b7a0aabe336 KEYS: Fix handling of stored error in a negatively instantiated user key
f43332f9ba9 KEYS: Don't permit request_key() to construct a new keyring
bff70867e4a KEYS: fix freeing uninitialized memory in key_update()
2ae88fa0e31 KEYS: Call ->free_preparse() even after ->preparse() returns an error
11848a4bdd6 KEYS: fix dereferencing NULL payload with nonzero length
5930c8a680c KEYS: Fix an error code in request_master_key()
41cad0237f7 keys: Guard against null match function in keyring_search_aux()
595629f91bf KEYS: Fix ASN.1 indefinite length object parsing
5609befd1b8 selinux: fix double free in selinux_parse_opts_str()
c792cb58553 selinux: remove unused variabled in the netport, netnode, and netif caches
0da154023f6 selinux: conditionally reschedule in hashtab_insert while loading selinux policy
105c1f7a36f selinux: conditionally reschedule in mls_convert_context while loading selinux policy
a94a56039ea selinux: no recursive read_lock of policy_rwlock in security_genfs_sid()
d2a41edac59 selinux: fix a possible memory leak in cond_read_node()
86023447031 selinux: simple cleanup for cond_read_node()
f221647fd1f selinux: cleanup error reporting in selinux_nlmsg_perm()
0c2587a247c selinux: quiet the filesystem labeling behavior message
9a345aaf662 SELinux: do all flags twiddling in one place
e2609f1b091 UPSTREAM: selinux: fix bug in conditional rules handling
aa57b1c42c7 BACKPORT: selinux: restrict kernel module loading
53a54157fb1 selinux: Remove obsolete selinux_audit_data initialization.
d7eed934c01 selinux: normalize audit log formatting
806197fe7a2 audit: fix a double fetch in audit_log_single_execve_arg()
7b80c540fbd Sanitize 'move_pages()' permission checks
c9d6c80f78b mm/mempolicy: fix use after free when calling get_mempolicy
cdd91581a01 audit: Fix use after free in audit_remove_watch_rule()
4a5ee29468d Use %zu to print resid (size_t).
c6fc7766770 clk: qcom: Increase branch clk status maximum delay
b57b6ac02f6 UPSTREAM: sysfs: add sysfs_create/remove_groups()
3a2d2afe2b7 ARM: make sure RO local relocations are part of kernel RO section
fffbd798cf7 fs/buffer.c: increase the buffer-head per-CPU LRU size
a527970eee0 signal: Only reschedule timers on signals timers have sent
f36dc7d0961 BACKPORT: FROMLIST: pids: make task_tgid_nr_ns() safe
074aefb1188 panic: add cpu/pid to warn_slowpath_common in WARNING printk()s
048cd58893a selinux: Remove unused function avc_sidcmp()
a3b394f0d78 af_unix: fix struct pid memory leak
a7090e6e372 BACKPORT: audit: consistently record PIDs with task_tgid_nr()
511fd139329 selinux: Improve avc logging
cf860237009 ANDROID: hid: uhid: implement refcount for open and close
c45ac490f16 BACKPORT: HID: input: generic hidinput_input_event handler
d6af6231dfb ANDROID: mnt: Fix next_descendent
e5c5dd95e8b UPSTREAM: procfs: fixes pthread cross-thread naming if !PR_DUMPABLE
8d444af7d4c proc: add a reschedule point in proc_readfd_common()
e340fb4490d ANDROID: keychord: Fix for a memory leak in keychord.
95b73b87da6 ANDROID: keychord: Fix races in keychord_write.
8569d284cef ANDROID: keychord: Fix a slab out-of-bounds read.
8f93891e1d9 signal: protect SIGNAL_UNKILLABLE from unintentional clearing.
7623d458203 UPSTREAM: brcmfmac: fix possible buffer overflow in brcmf_cfg80211_mgmt_tx()
c82b83414d3 net: wireless: bcmdhd: Ensure watchdog thread isnt called on bus reset
2d8d9333989 net: wireless: bcmdhd: fix for flowring delete pending error
1ea178f9e88 net: wireless: bcmdhd: fix for flowring packet drop issue
9320d2336eb net: wireless: bcmdhd: fix for race condition in flowrings.
4c1b243a884 net: wireless: bcmdhd: Adding check for array out of bound read
d51ab8facb7 net: wireless: bcmdhd: fix kernel panic issue in low memory status

   * vendor/motorola/
036c31d msm8226-common: /system/bin -> /system/vendor/bin

====================
     10-11-2017
====================


   * build/make/
d47bb28a7 Add LOCAL_AIDL_FLAGS
88076c6ea Include vendor/lineage/build/core/clear_vars.mk

   * kernel/moto/shamu/
7376c2e0b7f arm: fix handling of F_OFD_... in oabi_fcntl64()

   * system/core/
ca4e4e2f3 init: add missing read of property ro.boot.bootdevice

====================
     10-10-2017
====================


   * device/moto/shamu/
59d85270 shamu: Add zram

   * frameworks/av/
80418d264 Merge branch 'lineage-15.0' of https://github.com/LineageOS/android_frameworks_av into 8.0
22839bad9 MTP: Return nullptr, not NULL

   * frameworks/base/
515d6f13a6c Bring back aapt -x <pkgid>
b1b2912731e Battery bar enhancements [1/2]
d1b7218aad7 Have Battery bar controller obey Hide value
4978bb733e9 BatteryBar [1/2]

   * kernel/moto/shamu/
c5a7b9bf7fe drivers: net: Disable watchdog
ff725248655 net: rmnet_data: Disable watchdog for rmnet
52fc23ed297 net: sch_generic: Allow devices to opt-out net watchdog
92d91177fcd zram: compact zram when suspended
3fb57b683bd mm: compaction: compact all zones when suspended
091876b635c shamu: Enable state notifier driver
dbd81ae3ec5 state_notifier: Enabled by default
e55a637deca state_notifier: Check delayed work status before cancel
5d760f24ece shamu: state_notifier: Improve routine
8ff52f401da state_notifier: Make workqueues unbound
a31b63231fe shamu: Add state notifier driver
230c413e77d ARM: wire up getrandom syscall
b13cb2001ad BACKPORT: random: Wake up all getrandom(2) callers when pool is ready
d046a9a9dc4 BACKPORT: random: introduce getrandom(2) system call
c8974959621 random32: include missing header file
63cb17ab2cc BACKPORT: random32: add prandom_reseed_late() and call when nonblocking pool becomes initialized
72b4ba2c287 BACKPORT: random32: add periodic reseeding
41ac6584d5d random: add_hwgenerator_randomness() for feeding entropy from devices
8aa61fa5c49 seccomp: always propagate NO_NEW_PRIVS on tsync
65da7412c93 seccomp,x86,arm,mips,s390: Remove nr parameter from secure_computing
11e630db1df CHROMIUM: oom: do not select new victim if current one is runnable
85c7a844aa7 CHROMIUM: DROP: mm/oom_kill: Avoid deadlock; allow multiple victims
fced5f7300e CHROMIUM: DROP: mm/oom_kill: Double-check before killing a child in our place
dde8930e798 BACKPORT: mm: oom_kill: don't ignore oom score on exiting tasks
c8f3bcefc7f CHROMIUM: mm: lower oom dump burst limit to 1
cad143a0d97 sched: turn off the TTWU_QUEUE feature
8e4100168b8 shamu: Enable ZRAM and LZ4 compression
3475a753dcf input: atmel_mxt_ts_mmi: Use wakeup key instead of power key for dt2w
2821f01165d locking/rtmutex: Use READ_ONCE() in rt_mutex_owner()
075708aa2b7 compiler.h: avoid sparse errors in __compiletime_error_fallback()
787fc9d2427 compiler: Allow 1- and 2-byte smp_load_acquire() and smp_store_release()
6fd39d38dcb locking: Remove atomicy checks from {READ,WRITE}_ONCE
e64ec9cf184 kernel: make READ_ONCE() valid on const arguments
3d1f7d06d6e kernel: Change ASSIGN_ONCE(val, x) to WRITE_ONCE(x, val)
da4a6a59f36 kernel: Provide READ_ONCE and ASSIGN_ONCE
db489e10139 compiler.h: add support for malloc attribute
7eb06cd8f2c include/linux/compiler-gcc.h: improve __visible documentation
9b1b0a8c745 include/linux/compiler-gcc.h: hide assume_aligned attribute from sparse
cd1b45ff2fa compiler.h: add support for function attribute assume_aligned
e46826f95c3 ARM: 8692/1: mm: abort uaccess retries upon fatal signal
441c5632378 mm: vmscan: lock page on swap error in pageout
ef517d5c4a5 zsmalloc: fix zs_can_compact() integer overflow
2cb58105317 mm/zsmalloc: add `freeable' column to pool stat
3a1c2032be6 zsmalloc: drop unused member 'mapping_area->huge'
28d60118cef zsmalloc: fix migrate_zspage-zs_free race condition
1849314b2cc zsmalloc: reorganize struct size_class to pack 4 bytes hole
535c8b5c69f zsmalloc: use page->private instead of page->first_page
37c8de61ee5 zsmalloc: reduce size_class memory usage
e9013edeaf4 mm/zsmalloc.c: remove useless line in obj_free()
3f120e0acb7 zsmalloc: use preempt.h for in_interrupt()
2eb763846c7 zsmalloc: fix obj_to_head use page_private(page) as value but not pointer
e1353eddb62 zsmalloc: add comments for ->inuse to zspage
632b6f92b1b zsmalloc: remove null check from destroy_handle_cache()
63dd739e5f7 zsmalloc: use class->pages_per_zspage
06ba05e8aeb zsmalloc: consider ZS_ALMOST_FULL as migrate source
8566da73610 zram: update documentation
af8e88fb208 zsmalloc: account the number of compacted pages
816c9545aae zram: add `compact` sysfs entry to documentation
2622fc55c95 zsmalloc/zram: introduce zs_pool_stats api
fca2435a522 zsmalloc: cosmetic compaction code adjustments
31e602e764e zsmalloc: introduce zs_can_compact() function
c3421254924 zsmalloc: always keep per-class stats
65f5c39b733 zsmalloc: drop unused variable `nr_to_migrate'
cfb30c517db zsmalloc: remove obsolete ZSMALLOC_DEBUG
a3db3fec6b1 zsmalloc: partial page ordering within a fullness_list
23205032085 zram: Register with show_mem notification framework
d5c4b967116 zram: restrict add/remove attributes to root only
657fd3d37e0 zram: fix unbalanced idr management at hot removal
31cafc2bcee zram: don't call idr_remove() from zram_remove()
c2d55b6a5b1 zram/zcomp: do not zero out zcomp private pages
9f1d71ffb0c zram: pass gfp from zcomp frontend to backend
d86d0806b37 zram: try vmalloc() after kmalloc()
0375f88e3c8 zram/zcomp: use GFP_NOIO to allocate streams
c2bbe28eef2 zram: make is_partial_io/valid_io_request/page_zero_filled return boolean
1ee570264f2 zram: keep the exact overcommited value in mem_used_max
ffc90208414 zram: introduce comp algorithm fallback functionality
91d89f3b5e9 zram: unify error reporting
53ef86d1071 zram: fix pool name truncation
0f07561acd0 zram: check comp algorithm availability earlier
b501be8cc7c zram: cut trailing newline in algorithm name
ea349c5004e zram: cosmetic zram_bvec_write() cleanup
79203573ce2 zram: add dynamic device add/remove functionality
de79545c6ea zram: close race by open overriding
bbf758075b9 zram: return zram device_id from zram_add()
316d54a58be zram: trivial: correct flag operations comment
3f62b1608d7 zram: report every added and removed device
cb77cddf106 zram: remove max_num_devices limitation
25a956d4cf0 zram: reorganize code layout
1eff429a989 zram: use idr instead of `zram_devices' array
50c60e10678 zram: cosmetic ZRAM_ATTR_RO code formatting tweak
cb2b155ff93 zram: Add back QUEUE_FAST_FLAG
feda824bff1 zram: Disable allocation failure logging
01170336aa0 zram: remove obsolete ZRAM_DEBUG option
4cbe1d7ba97 staging: zram: Rate limit memory allocation errors
175c59e9a77 zram: Default lz4 if available
f661ec91b8c zram: do not use copy_page with non-page aligned address
19f1cc71175 zram: fix possible use after free in zcomp_create()
75da769d13a block: zram: Backport from Linux 4.1
de18ee6d036 mm: zsmalloc: backport from Linux 4.1
19e1aa2f985 mm/zpool: add name argument to create zpool
35448ec88fa mm/zpool: use prefixed module loading
31c7505fef3 mm/zpool: implement common zpool api to zbud/zsmalloc
320661aea3b mm: swap: don't delay swap free for fast swap devices
b9fba40705d swap: fix set_blocksize race during swapon/swapoff
d70c52d1644 mm/swapfile.c: do not skip lowest_bit in scan_swap_map() scan loop
c1dbe1246d6 swap: cond_resched in swap_cgroup_prepare()
3f01796b345 initramfs: avoid "label at end of compound statement" error
ecb45cd8eca initramfs: Always do fput() and load modules after rootfs populate
19e46f87cae initramfs: finish fput() before accessing any binary from initramfs
870092de03d init/initramfs.c: resolve shadow warnings
18b2edb72e8 initramfs: add write error checks
3f6b28f79b7 initramfs: support initramfs that is bigger than 2GiB
19dc7b5d9f4 initramfs: support initrd that is bigger than 2GiB
3fc1146834f init: fix possible format string bug
4ca428fbdbe lib/decompress_inflate.c: include appropriate header file
5b34614870e initrd: fix lz4 decompress with initrd
aaa120f49c8 lib/decompress_unlz4.c: always set an error return code on failures
a85f536eaef arm: add support for LZ4-compressed kernel
1d22a4eddb0 lz4: fix wrong compress buffer size for 64-bits
9d9817ffa71 lib: lz4: cleanup unaligned access efficiency detection
89ab799c809 lib: lz4: fixed zram with lz4 on big endian machines
acdedba188b lz4: fix system halt at boot kernel on x86_64
ace2de92629 lib/lz4: Pull out constant tables
707ce44e685 LZ4 : fix the data abort issue
44a3e44b849 lz4: add overrun checks to lz4_uncompress_unknownoutputsize()
68e6fc71c04 lz4: fix another possible overrun
82a8ef2cd7d lz4: ensure length does not wrap
b3e6cf502ad lz4: fix compression/decompression signedness mismatch
920bd343a7e lib/lz4: correct the LZ4 license
ee3b0d549d9 lib: add lz4 compressor module
efcefb7421e lib: add support for LZ4-compressed kernel
eb2bff57211 decompressor: add LZ4 decompressor module
e34119aab22 rcu: Don't disable CPU hotplug during OOM notifiers
0c282fffd6d rcu: Use rcu_gp_kthread_wake() to wake up grace period kthreads
baaa4c97c4f rcu: Check both root and current rcu_node when setting up future grace period
6c8c0d2847e rcu: Make callers awaken grace-period kthread
84d6e634728 rcu: Update cpu_needs_another_gp() for futures from non-NOCB CPUs
d68096185ce rcu: Protect ->gp_flags accesses with ACCESS_ONCE()
7d9922f28f8 nohz_full: Force RCU's grace-period kthreads onto timekeeping CPU
97aab80d242 rcu: Throttle rcu_try_advance_all_cbs() execution
df047d5afd4 rcu: Flag lockless access to ->gp_flags with ACCESS_ONCE()
e5430a28566 rcu: Prevent spurious-wakeup DoS attack on rcu_gp_kthread()
5fa256caf5c rcu: Avoid redundant grace-period kthread wakeups
dccb7ca077e rcu: Move redundant call to note_gp_changes() into called function
246ee249e45 rcu: Inline trivial wrapper function rcu_start_gp_per_cpu()
ef24dba2905 rcu: Eliminate check_for_new_grace_period() wrapper function
05be4b035a3 rcu: Merge __rcu_process_gp_end() into __note_gp_changes()
fdf317e7aaa rcu: Switch callers from rcu_process_gp_end() to note_gp_changes()
12a56de04c4 rcu: Rename note_new_gpnum() to note_gp_changes()
ab4ce113a92 rcu: Make __note_new_gpnum() check for ends of prior grace periods
b236a600ee0 rcu: Move code to apply callback-numbering simplifications
5285c370f06 rcu: Fix missing task information during rcu-preempt stall
9d5878a8118 rcu: Add GP-kthread-starvation checks to CPU stall warnings
796966f5b0c rcu: Make RCU_CPU_STALL_INFO include number of fqs attempts
cd04eb7b1cd rcu: Improve diagnostics for spurious RCU CPU stall warnings
0c21b88e29b rcu: Move RCU-related source code to kernel/rcu directory
35063aa1b3b ARM: gic: fix restore order of distributor registers in gic_cpu_restore()
ae31992cef9 sync: Permit out-of order sync users
620ed1f0799 sync: signal pt before sync_timeline object gets destroyed
1a70f3bcdd6 msm-pm: Print spm registers status on hotplug failure
f97e3408b07 platsmp: Print the pending irqs in case of hotplug failure
d216aabe161 msm: platsmp: Fix few data and pointer handling issues
4d515146fb6 DO NOT MERGE: audit: Fail silently
9b05821a5e1 sysrq: FIQ and sysrq default deauthorized
1464c78b429 sysrq: Emergency Remount R/O in reverse order
41e63b2c88a netfilter: nf_conntrack: decrement global counter after object release
2c1db1b275f msm: ADSPRPC: Buffer length truncated while validation
41543bde60c msm: ADSPRPC: Free interrupted contexts on device close
1c9b9bcf3e8 power: Add charge_full_design property
2349dd8723c Power: Fan5404x: Update batt_health in driver probe.
aeb760166ea factory: Fix warning due to incorrect OF API usage
dc861fab546 power: max17042: put max17042 read code from irq handler
127ae46b7cb mmc: sdhci: Vote for new IRQ specific QoS request
9f8e6156c5f PM / Domains: Fix unsafe iteration over modified list of device links
37d010648f3 PM / Wakeup: Use rcu callbacks for better performance
b03e425805f msm: pm: use correct cpu_suspend call for Non-PSCI targets
736e5252811 arm: kernel: refactor the CPU suspend API for retention states
f269a519505 ARM: suspend: use hash of cpu_logical_map value to index into save array
22e482641ea ARM: kernel: implement stack pointer save array through MPIDR hashing
f48309b660b ARM: kernel: build MPIDR hash function data structure
399ae685542 PM / sleep: Allow devices without runtime PM to do direct-complete
f31be591d1d PM / sleep: Mechanism to avoid resuming runtime-suspended devices unnecessarily
15a865176e0 PM / Sleep: fix async suspend_late/freeze_late error handling
1df38f20abb PM / sleep: Asynchronous threads for suspend_late
0c661317e19 PM / sleep: Asynchronous threads for suspend_noirq
a4be6a166c7 PM / sleep: Asynchronous threads for resume_early
db67565b551 PM / sleep: Asynchronous threads for resume_noirq
aaa9e8572e4 PM / sleep: Two flags for async suspend_noirq and suspend_late
820be2555c0 PM / sleep / irq: Do not suspend wakeup interrupts
e2d44c4adeb PM / Runtime: Fix error path for prepare
77d43ffe50f drivercore: Avoid adding devices without pm_ops to dpm list
7bfb397ec87 idle: add a check for need_resched() after rcu_idle_enter
51c7ac7a872 cpuidle: Fix cpuidle_state_is_coupled() argument in cpuidle_enter()
c7ca98f5b87 cpuidle: delay enabling interrupts until all coupled CPUs leave idle
ca0b81f8d56 cpuidle: don't disable cpuidle when entering suspend
42cbc0608e0 cpuidle: Wakeup only cpus for which qos has changed.
51c1430f0c4 cpuidle: Check for dev before deregistering it.
848aadf83c8 cpuidle: remove cpuidle_unregister_governor()
0c9c134baee cpuidle: Make it clear that governors cannot be modules
06064087a57 cpuidle: don't call poll_idle_init() for every cpu
4a6d07325ca cpuidle: use drv instead of cpuidle_driver in show_current_driver()
3ee0dc6c039 cpuidle: call cpuidle_get_driver() from after taking cpuidle_driver_lock
3ddb34b89f8 cpuidle: replace multiline statements with single line in cpuidle_idle_call()
16d40ba019d cpuidle: reduce code duplication inside cpuidle_idle_call()
61988414474 cpuidle: merge two if() statements for checking error cases
dd0c93da2f6 cpuidle: rearrange __cpuidle_register_device() to keep minimal exit points
a4b62d2f767 cpuidle: rearrange code in __cpuidle_driver_init()
596a865ea0e cpuidle: make __cpuidle_driver_init() return void
5e5d5d5e207 cpuidle: Comment the driver's framework code
ac344d2e1dd cpuidle: make __cpuidle_device_init() return void
4d4a833f1ff cpuidle: Check if device is already registered
691571271be cpuidle: Introduce __cpuidle_device_init()
1f54130f800 cpuidle: Introduce __cpuidle_unregister_device()
4c0b51f218a cpuidle: Check cpuidle_enable_device() return value
0856f5c5d2d cpuidle: improve governor Kconfig options
e534937a8bb cpuidle: fix improper return value on error
7aec46dc7ae cpuidle: lpm-levels: Remove local_irq_enable from lpm_cpuidle_select
ecca7495c9d cpuidle: simplify multiple driver support
9cb9549d7cb cpuidle: Replace strnicmp with strncasecmp
85d555cf7d9 cpuidle: Add need_resched() check
0bbd5e4c4f7 drivers: cpuidle: Remove counting of last_residency
e2e9913a40c lpm-levels: Move cpuidle tracepoints within lpm_levels
f38ca356486 leds: Quick fix warning for blink led support
63282a684cb leds: led-class: Retain the latest user brightness request
264ec54ec28 leds: led-class: don't disable active triggers
ef5c3961f81 leds: leds-qpnp: make blink functionality synchronous
edc56b9218e leds: leds-qpnp: use the proper pwm period in LPG mode
798c8469223 leds: leds-qpnp: remove the usage of mutex_destroy for static mutex
20ac2c52c1b leds: leds-qpnp: use a single global mutex for flash led
67f5552cb15 leds: leds-qpnp: avoid calling pwm_disable when scaling leds' brightness
b4ae5b069d4 leds: leds-qpnp: bug fix for NULL pointer dereference in qpnp_xxx_set()
1f8839c692a leds: leds-qpnp: PWM period granularity auto selection for leds
3bcf12a4cda leds: leds-qpnp: correct brightness value for MPP based LEDs
f776f4b2d5a leds: leds-qpnp: avoid truncation in qpnp_led_masked_write function
be12892f5ce fs: Workaround the compiler's bad optimization
263d7773d97 pstore-ram: Use unbuffered memory by default
9b51cd8734a pstore: Use dynamic spinlock initializer
3c293a213d7 pstore: Correctly initialize spinlock and flags
4a63b6f1eca pstore: Allow prz to control need for locking
05fe6739d9c pstore: Make spinlock per zone instead of global
7d0e22cc349 fs/pstore: Optimization function ramoops_init_przs
2aaa9dbd192 pstore: Fix return type of pstore_is_mounted()
6d15fb63a4e pstore: Actually give up during locking failure
03787afee70 pstore: make the unlock code a bit simpler
65ae00639d5 pstore: Fix the ramoops module parameters update
e2b639febf4 Revert "drivers: base: close firmware file after use"
340668d5829 mm/page-writeback.c: fix divide by zero in bdi_dirty_limits()
a4b28163002 mm/page-writeback.c: add strictlimit feature
a47c7ea9bd6 mm: page-writeback: fix page state calculation in throttle_vm_writeout
4edbe7d72fa Revert "mm: change max readahead size to 512KB"
e6a80a5676a readahead: make context readahead more conservative
41edbc1ef4b writeback: Do not sort b_io list only because of block device inode
7756c5d2fb0 writeback: Fix occasional slow sync(1)
88b1b3c6824 writeback: fix writeback cache thrashing
8e46917bb23 writeback: fix race that cause writeback hung
2f3c5734091 sync: don't block the flusher thread waiting on IO
8c8f5e48bc3 ARM: 8328/1: remove empty preprocessor #else branch
1a15b570d1a ARM: 8160/1: drop warning about return_address not using unwind tables
4b3b52f593a ARM: 8158/1: LLVMLinux: use static inline in ARM ftrace.h
d512781db92 scripts: remove unused function in sortextable.c
dfc14190972 scripts/sortextable: support objects with more than 64K sections.
9a41e484f22 scripts/tags.sh: catch 4.9-rc6
4759f6ef040 scripts: Build in parallel if requested
7723c99fa1c scripts: Refactor build-all.py's build
1fcff46baf6 tty: fix memleak in alloc_pid
00abe116e2f diag: dci: Send mode reset command to the apps processor
b2d23558d8c diag: Reduce error message frequency
04809c6540b msm: Fix high load average from uninterruptible waits

